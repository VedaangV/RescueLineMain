//USING MEDIANS OF THREE VALUES
#include <QuickMedianLib.h>

float s1[6][3];
float s2[6][3];
//float gr_avg = 0;
float s1_gr_med = 0;
float s2_gr_med = 0;


void get_ok2()
{
  //Serial.println("Serail 2 Available  ");
  //Serial.println(Serial2.available());

  while(Serial2.available())
  {
    if(Serial2.read() == 'K')
    {
      //Serial.println("found ok");
      break;
    }
  }
  
}

void get_ok3()
{
  //Serial.println("Serail 3 Available  ");
  //Serial.println(Serial3.available());

  while(Serial3.available())
  {
    if(Serial3.read() == 'K')
    {
      //Serial.println("found ok");
      break;
    }
  }
  
}

void setup()
{
  Serial.begin(115200);
  
  Serial2.begin(115200);
  Serial2.println("ATINTTIME=1");

  while(Serial2.available()==0)
  {
    Serial.println("Serial 2 not available");
  }
  get_ok2();

  Serial3.begin(115200);
  Serial3.println("ATINTTIME=1");

  while(Serial3.available()== 0)
  {
    Serial.println("Serial 3 not available");
  }
  
  get_ok3();

  //Serial2.println("ATBURST=1");
  //get_ok2();

  //Serial3.println("ATBURST=1");
  //get_ok3();

    /*get_ok();
  Serial2.println("ATBURST=1");
  get_ok();*/
  
}

void get_vals()
{
  Serial2.println("ATDATA");
  get_ok2();

  s1[0][0] = Serial2.parseInt();
  Serial.print(s1[0][0]);
  Serial.print("  ");
  s1[1][0] = Serial2.parseInt();
  Serial.print(s1[1][0]);
  Serial.print("  ");
  s1[2][0] = Serial2.parseInt();
  Serial.print(s1[2][0]);
  Serial.print("  ");
  s1[3][0] = Serial2.parseInt();
  Serial.print(s1[3][0]);
  Serial.print("  ");
  s1[4][0] = Serial2.parseInt();
  Serial.print(s1[4][0]);
  Serial.print("  ");
  s1[5][0] = Serial2.parseInt();
  Serial.print(s1[5][0]);
  Serial.println("  ");

Serial2.println("ATDATA");
  get_ok2();
  
  s1[0][1] = Serial2.parseInt();
  Serial.print(s1[0][1]);
  Serial.print("  ");
  s1[1][1] = Serial2.parseInt();
  Serial.print(s1[1][1]);
  Serial.print("  ");
  s1[2][1] = Serial2.parseInt();
  Serial.print(s1[2][1]);
  Serial.print("  ");
  s1[3][1] = Serial2.parseInt();
  Serial.print(s1[3][1]);
  Serial.print("  ");
  s1[4][1] = Serial2.parseInt();
  Serial.print(s1[4][1]);
  Serial.print("  ");
  s1[5][1] = Serial2.parseInt();
  Serial.print(s1[5][1]);
  Serial.println("  ");

Serial2.println("ATDATA");
  get_ok2();
  
  s1[0][2] = Serial2.parseInt();
  Serial.print(s1[0][2]);
  Serial.print("  ");
  s1[1][2] = Serial2.parseInt();
  Serial.print(s1[1][2]);
  Serial.print("  ");
  s1[2][2] = Serial2.parseInt();
  Serial.print(s1[2][2]);
  Serial.print("  ");
  s1[3][2] = Serial2.parseInt();
  Serial.print(s1[3][2]);
  Serial.print("  ");
  s1[4][2] = Serial2.parseInt();
  Serial.print(s1[4][2]);
  Serial.print("  ");
  s1[5][2] = Serial2.parseInt();
  Serial.print(s1[5][2]);
  Serial.println("  ");


//---------------------------------------------------------------------------\\


  Serial3.println("ATDATA");
  get_ok3();

  
  s2[0][0] = Serial3.parseInt();
  Serial.print(s2[0][0]);
  Serial.print("  ");
  s2[1][0] = Serial3.parseInt();
  Serial.print(s2[1][0]);
  Serial.print("  ");
  s2[2][0] = Serial3.parseInt();
  Serial.print(s2[2][0]);
  Serial.print("  ");
  s2[3][0] = Serial3.parseInt();
  Serial.print(s2[3][0]);
  Serial.print("  ");
  s2[4][0] = Serial3.parseInt();
  Serial.print(s2[4][0]);
  Serial.print("  ");
  s2[5][0] = Serial3.parseInt();
  Serial.print(s2[5][0]);
  Serial.println("  ");

  Serial3.println("ATDATA");
  get_ok3();
  
  s2[0][1] = Serial3.parseInt();
  Serial.print(s2[0][1]);
  Serial.print("  ");
  s2[1][1] = Serial3.parseInt();
  Serial.print(s2[1][1]);
  Serial.print("  ");
  s2[2][1] = Serial3.parseInt();
  Serial.print(s2[2][1]);
  Serial.print("  ");
  s2[3][1] = Serial3.parseInt();
  Serial.print(s2[3][1]);
  Serial.print("  ");
  s2[4][1] = Serial3.parseInt();
  Serial.print(s2[4][1]);
  Serial.print("  ");
  s2[5][1] = Serial3.parseInt();
  Serial.print(s2[5][1]);
  Serial.println("  ");

  Serial3.println("ATDATA");
  get_ok3();

  s2[0][2] = Serial3.parseInt();
  Serial.print(s2[0][2]);
  Serial.print("  ");
  s2[1][2] = Serial3.parseInt();
  Serial.print(s2[1][2]);
  Serial.print("  ");
  s2[2][2] = Serial3.parseInt();
  Serial.print(s2[2][2]);
  Serial.print("  ");
  s2[3][2] = Serial3.parseInt();
  Serial.print(s2[3][2]);
  Serial.print("  ");
  s2[4][2] = Serial3.parseInt();
  Serial.print(s2[4][2]);
  Serial.print("  ");
  s2[5][2] = Serial3.parseInt();
  Serial.print(s2[5][2]);
  Serial.println("  ");

  
}


void loop() 
{
  //while(!Serial2.available());
  //Serial2.println("ATDATA");

  get_vals();

  s1_gr_med = QuickMedian<float>::GetMedian(s1[2], 6) / QuickMedian<float>::GetMedian(s1[5], 6);
  Serial.print("Median1                                                       ");
  Serial.println(s1_gr_med);


  s2_gr_med = QuickMedian<float>::GetMedian(s2[2], 6) / QuickMedian<float>::GetMedian(s2[5], 6);
  Serial.print("Median 2                                                      ");
  Serial.println(s2_gr_med);


  
  //Serial.println(gr_avg);
  
 
  
}
